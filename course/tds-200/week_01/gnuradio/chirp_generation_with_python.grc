options:
  parameters:
    author: ''
    category: '[GRC Hier Blocks]'
    cmake_opt: ''
    comment: ''
    copyright: ''
    description: ''
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: qt_gui
    hier_block_src_path: '.:'
    id: chirp_generation_with_python
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: prompt
    sizing_mode: fixed
    thread_safe_setters: ''
    title: Not titled yet
    window_size: ''
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 8]
    rotation: 0
    state: enabled

blocks:
- name: samp_rate
  id: variable
  parameters:
    comment: ''
    value: 1e6
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [184, 12]
    rotation: 0
    state: enabled
- name: analog_sig_source_x_0
  id: analog_sig_source_x
  parameters:
    affinity: ''
    alias: ''
    amp: util.np.pi/2-util.np.pi/16
    comment: ''
    freq: '0.05'
    maxoutbuf: '0'
    minoutbuf: '0'
    offset: util.np.pi/16
    phase: '0'
    samp_rate: samp_rate
    type: float
    waveform: analog.GR_SAW_WAVE
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [109, 109]
    rotation: 0
    state: enabled
- name: blocks_throttle_0
  id: blocks_throttle
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    ignoretag: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    samples_per_second: samp_rate
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [369, 149]
    rotation: 0
    state: true
- name: blocks_vector_source_x_0
  id: blocks_vector_source_x
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    repeat: 'True'
    tags: '[]'
    type: float
    vector: (1,1,1)
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [113, 258]
    rotation: 0
    state: disabled
- name: epy_block_0
  id: epy_block
  parameters:
    _source_code: "\"\"\"\nChirp Generator Block:\n\nGenerates a chirp waveform when\
      \ given an angle increment\n\"\"\"\n\nimport numpy as np\nfrom gnuradio import\
      \ gr\n\n\nclass blk(gr.sync_block): \n    \"\"\"Chirp Generator\"\"\"\n\n  \
      \  def __init__(self):  \n        \"\"\"arguments to this function show up as\
      \ parameters in GRC\"\"\"\n        gr.sync_block.__init__(\n            self,\n\
      \            name='Chirp Generator', \n            in_sig=[np.float32],\n  \
      \          out_sig=[np.float32]\n        )\n        self.start_angle_rad=0.0\n\
      \n    def work(self, input_items, output_items):\n\n        #angle increment\n\
      \        input_angle_delta_rad = input_items[0]\n        \n        #Make sure\
      \ the ending angle is added to the start of each block to keep the chirp continuous\n\
      \        input_angle_delta_rad[0] =  self.start_angle_rad + input_angle_delta_rad[0]\n\
      \        #add the deltas together to get the actual angle\n        input_angle_rad\
      \ = np.cumsum(input_angle_delta_rad)\n\n        output_sin_values = np.sin(input_angle_rad)\
      \       \n   \n        #prevent overflow of the angle\n        self.start_angle_rad\
      \ = (input_angle_rad[len(input_angle_rad)-1] + np.pi) % (2 * np.pi) - np.pi\n\
      \        \n        if len(output_items[0]) != len(output_sin_values):\n    \
      \        print(f\"ERROR: output_items[0] len = {len(output_items[0])}, output_sin_values\
      \ len = {len(output_sin_values)}\")        \t\n        output_items[0][:] =\
      \ output_sin_values\n        return len(output_items[0])\n"
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    _io_cache: ('Chirp Generator', 'blk', [], [('0', 'float', 1)], [('0', 'float',
      1)], 'Chirp Generator', [])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [650, 149]
    rotation: 0
    state: true
- name: qtgui_time_sink_x_1
  id: qtgui_time_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'True'
    axislabels: 'True'
    color1: blue
    color10: dark blue
    color2: red
    color3: green
    color4: black
    color5: cyan
    color6: magenta
    color7: yellow
    color8: dark red
    color9: dark green
    comment: ''
    ctrlpanel: 'False'
    entags: 'False'
    grid: 'False'
    gui_hint: '[2,0,1,1]'
    label1: Signal 1
    label10: Signal 10
    label2: Signal 2
    label3: Signal 3
    label4: Signal 4
    label5: Signal 5
    label6: Signal 6
    label7: Signal 7
    label8: Signal 8
    label9: Signal 9
    legend: 'False'
    marker1: '-1'
    marker10: '-1'
    marker2: '-1'
    marker3: '-1'
    marker4: '-1'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    name: Chirp
    nconnections: '1'
    size: '100'
    srate: samp_rate
    stemplot: 'False'
    style1: '1'
    style10: '1'
    style2: '1'
    style3: '1'
    style4: '1'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    tr_chan: '0'
    tr_delay: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: float
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    ylabel: Amplitude
    ymax: '1'
    ymin: '-1'
    yunit: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [971, 133]
    rotation: 0
    state: true
- name: qtgui_waterfall_sink_x_0
  id: qtgui_waterfall_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    axislabels: 'True'
    bw: samp_rate/2
    color1: '0'
    color10: '0'
    color2: '0'
    color3: '0'
    color4: '0'
    color5: '0'
    color6: '0'
    color7: '0'
    color8: '0'
    color9: '0'
    comment: ''
    fc: '0'
    fftsize: '1024'
    freqhalf: 'True'
    grid: 'False'
    gui_hint: '[0, 0, 2, 1]'
    int_max: '1'
    int_min: '-50'
    label1: ''
    label10: ''
    label2: ''
    label3: ''
    label4: ''
    label5: ''
    label6: ''
    label7: ''
    label8: ''
    label9: ''
    legend: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    name: '""'
    nconnections: '1'
    showports: 'False'
    type: float
    update_time: '0.10'
    wintype: firdes.WIN_BLACKMAN_hARRIS
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1073, 267]
    rotation: 0
    state: true
- name: util
  id: epy_module
  parameters:
    alias: ''
    comment: ''
    source_code: '# this module will be imported in the into your flowgraph

      import numpy as np

      '
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [566, 90]
    rotation: 0
    state: true

connections:
- [analog_sig_source_x_0, '0', blocks_throttle_0, '0']
- [blocks_throttle_0, '0', epy_block_0, '0']
- [blocks_vector_source_x_0, '0', blocks_throttle_0, '0']
- [epy_block_0, '0', qtgui_time_sink_x_1, '0']
- [epy_block_0, '0', qtgui_waterfall_sink_x_0, '0']

metadata:
  file_format: 1
